#BlueJ class context
comment0.target=Tabulator
comment0.text=\n\ @author\ Parker\ TenBroeck\ 7376726\n
comment1.params=pen\ scalingFactor
comment1.target=Tabulator(Media.Turtle,\ double)
comment1.text=\n\ Constructs\ a\ new\ Tabulator\n\ \n\ @param\ pen\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ turtle\ to\ use\ as\ a\ pen\n\ @param\ scalingFactor\ \ \ \ \ the\ scalingFactor\ to\ use\ for\ this\ instance\ of\ Tabulator\n
comment10.params=
comment10.target=int\ get()
comment10.text=\n\ Gets\ the\ current\ value\ of\ this\ instance\n\ \n\ @returns\ \ \ \ \ the\ value\ stored\ within\ this\ instance\n
comment11.params=
comment11.target=void\ draw()
comment11.text=\n\ Draws\ the\ current\ value\ of\ this\ instance\ at\ the\ current\ cursor\ position\n\ The\ cursor\ will\ be\ advanced\ the\ \#\ of\ digits\ present\ in\ the\ current\ value\ in\ base\ 10\n\ Negative\ numbers\ arent\ displayed\ properly\n
comment12.params=val
comment12.target=void\ drawDigit(int)
comment12.text=\n\ Draw\ the\ provided\ digit\ as\ a\ graphical\ glyph\ specified\ by\ the\ assignment\ PDF\n\ The\ glyph\ will\ be\ drawn\ at\ the\ current\ cursor\ position\ and\ will\ NOT\ change\n\ the\ position\ of\ the\ cursor\n\ \n\ A\ runtime\ exception\ will\ occur\ if\ the\ digit\ is\ not\ within\ the\ bounds\ [0,9]\n\ \n\ @param\ val\ \ \ the\ digit\ to\ be\ drawn\ [0,9]\n
comment13.params=
comment13.target=void\ carriagereturn()
comment13.text=\n\ Moves\ the\ current\ cursor\ position\ back\ the\ number\ of\ units\ equal\ to\ the\ number\ of\ digits\n\ of\ the\ stored\ value\ in\ this\ instance\ in\ base\ 10\n
comment14.params=
comment14.target=void\ linefeed()
comment14.text=\n\ Moves\ the\ current\ cursor\ position\ down\ one\ line\n
comment15.params=num
comment15.target=void\ advance(int)
comment15.text=\n\ Move\ the\ cursor\ one\ half\ character\ length\ to\ the\ right\n
comment16.params=num
comment16.target=void\ back(int)
comment16.text=\n\ Move\ the\ cursor\ one\ half\ character\ length\ to\ the\ left\n
comment17.params=scale
comment17.target=void\ setScale(double)
comment17.text=\n\ Sets\ the\ current\ scale\ (width\ of\ character)\ of\ this\ tabulator\n\ \n\ @param\ scale\ \ \ \ \ the\ new\ scale\ to\ use\n
comment18.params=angle
comment18.target=void\ setPenAngle(double)
comment18.text=\n\ Sets\ the\ pen\ angle\ to\ a\ given\ absolute\ value\n\ \n\ @param\ angle\ \ \ \ \ the\ current\ angle\ (abs)\ to\ set\ the\ pen\ to\n
comment19.params=x\ y
comment19.target=void\ translatePen(double,\ double)
comment19.text=\n\ Translates\ the\ pen\ by\ [x,y]\ preserving\ all\ other\ states\n\ \n\ @param\ x\ \ \ \ \ the\ x\ translation\ \n\ @param\ y\ \ \ \ \ the\ y\ translation\n
comment2.params=pen
comment2.target=Tabulator(Media.Turtle)
comment2.text=\n\ Constructs\ a\ new\ Tabulator\n\ \n\ @param\ pen\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ turtle\ to\ use\ as\ a\ pen\n
comment3.params=
comment3.target=void\ resetScreen()
comment3.text=\n\ Clear\ the\ screen\ to\ Color.WHITE\ and\ reset\ the\ cursor\ position\n
comment4.params=color
comment4.target=void\ fillScreen(java.awt.Color)
comment4.text=\n\ fills\ the\ entire\ screen\ with\ color\n\ this\ method\ preserves\ the\ turtles\ state\ (rotation,\ position\ and,\ color)\n\ \n\ @param\ color\ the\ color\ to\ fill\ the\ screen\ with\n
comment5.params=num
comment5.target=void\ add(int)
comment5.text=\n\ Adds\ the\ given\ value\ to\ the\ value\ stored\ within\ this\ instance\ \n\n\ @param\ \ num\ \ The\ number\ to\ add\ to\ this.value\n
comment6.params=num
comment6.target=void\ sub(int)
comment6.text=\n\ Subtracts\ the\ given\ value\ to\ the\ value\ stored\ within\ this\ instance\ \n\n\ @param\ \ num\ \ The\ number\ to\ subtract\ from\ this.value\n
comment7.params=num
comment7.target=void\ mul(int)
comment7.text=\n\ Multiply\ the\ given\ value\ to\ the\ stored\ within\ this\ instance\n\n\ @param\ \ num\ \ The\ number\ to\ multiply\ with\ this.value\n
comment8.params=num
comment8.target=void\ div(int)
comment8.text=\n\ Divide\ the\ value\ stored\ within\ this\ instance\ by\ the\ given\ value\n\n\ @param\ \ num\ \ the\ number\ to\ divide\ this.value\ by\n
comment9.params=num
comment9.target=void\ assign(int)
comment9.text=\n\ Store\ the\ given\ value\ in\ this\ instance\ as\ its\ current\ value\n\ \n\ @param\ num\ \ \ the\ value\ to\ assign\n
numComments=20
